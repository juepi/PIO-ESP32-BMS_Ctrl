; PlatformIO Project Configuration File
;
; ESP32 Daly BMS Monitor and Controller
;=========================================
; by juepi (https://github.com/juepi/)
; based on ESP32-Template (https://github.com/juepi/PIO-ESP32-Template)

; ---=== Project-wide Configuration ===---
; ========================================
[common_env_data]
; Host Name of board used for OTA flashing,
; WIFI-Hostname (DHCP Client name) and MQTT Client Name
ClientName = ug-bmsctrl-1
build_flags =
; Template Functions to enable/disable
    -D ONBOARD_LED
;    -D SERIAL_OUT
;    -D E32_DEEP_SLEEP
;    -D READVCC

; Project specific optional features
    -D ENA_ONEWIRE  ; enable OneWire Support for DS18B20 temperature sensors

; Network / Service Configuration
; Set system Environment Variables according to your setup
; Take care when using special characters, might need escaping
; see https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-flags
    -D WIFI_SSID=\"${sysenv.WIFI_SSID}\"
    -D WIFI_PSK=\"${sysenv.WIFI_PSK}\"
    -D CLTNAME="${common_env_data.ClientName}"
    -D MQTT_BROKER=\"${sysenv.MQTT_BROKER}\"
    -D OTA_PWD=\"${sysenv.OTA_PWD}\"
; Required Libraries
lib_deps =
    knolleary/PubSubClient @ ^2.8
    https://github.com/maland16/daly-bms-uart
    plerup/EspSoftwareSerial @ ^8.0.1
    https://github.com/juepi/VeDirectFrameHandler
    milesburton/DallasTemperature @ ^3.11.0
; OTA Update settings
upload_protocol = espota
upload_port = ${common_env_data.ClientName}
upload_flags =
 --port=3232
 --auth=${sysenv.OTA_PWD}


; ---=== Board-specific Configuration ===---
; ==========================================
; Board Selection
[platformio]
default_envs = Wemos_S2MINI

[env:Wemos_LOLIN32]
platform = espressif32
board = lolin32
framework = arduino
monitor_speed = 115200
build_flags =
    -D WEMOS_LOLIN32
    ${common_env_data.build_flags}
lib_deps =
    ${common_env_data.lib_deps}
; OTA - uncomment the following 3 lines to enable OTA Flashing
;upload_protocol = ${common_env_data.upload_protocol}
;upload_port = ${common_env_data.upload_port}
;upload_flags = ${common_env_data.upload_flags}

[env:Wemos_S2MINI]
; ATTENTION: Wired Programming for this board is a bit complicated, follow these instructions:
; - Connect the board to the PC, listen to the "new device connected" sound (COM port added to system)
; - Start the PlatformIO:Upload process
; - When you see the output "Waiting for the new upload port..." on the terminal, QUICKLY
;  - Press and hold the "0" button on the board and then immediately press and hold the "RST" button until you hear the "device disconnected" sound from your OS, then QUICKLY
;  - Release both buttons
; - if you got this timed correctly, the upload will start - if not, retry!
; - Upload will give you a WARNING the you have to reset the board manually -> do so using the RST button and your new sketch should be booted

platform = espressif32
board = lolin_s2_mini
framework = arduino
monitor_speed = 115200
build_flags =
    -D WEMOS_S2MINI
    ${common_env_data.build_flags}
lib_deps =
    ${common_env_data.lib_deps}
; OTA - uncomment the following 3 lines to enable OTA Flashing
upload_protocol = ${common_env_data.upload_protocol}
upload_port = ${common_env_data.upload_port}
upload_flags = ${common_env_data.upload_flags}
